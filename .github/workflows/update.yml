#
# Copyright (C) 2022 Ing <https://github.com/wjz304>
# 
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#


name: update
on:
  push:
  schedule:
    - cron: '10 */6 * * *'
  workflow_dispatch:
env:
  FORCE_INSTALL: 1
  HAS_OPENSSL_BUILD: 1
  HAS_OPENSSL_W32BUILD: 0
  ACID32: 1


jobs:
  build:
    runs-on: macos-12
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run : |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo systemsetup -settimezone "Asia/Shanghai"

      - name: Install Python Dependencies
        run: |
          python3 -m pip install -U pip
          pip3 install datetime urllib3 wget

      - name: Run Updater
        run: python3 -u update.py -i ventura -t ${{ secrets.GITHUB_TOKEN }}

      - name: Check for changes
        run: |
          if [ -n "$(git status -s | grep -v -w timestamp)" ];then
            echo "ischanges=true" >> $GITHUB_ENV
            echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
            ## '$GITHUB_ENV' needs to add 'EOF' when setting multiline text.
            # echo "changesbody=$(git status -s | grep -v -w timestamp)" >> $GITHUB_ENV
            echo 'changesbody<<EOF' >> $GITHUB_ENV
            git status -s | grep -v -w timestamp >> $GITHUB_ENV
            echo 'EOF' >> $GITHUB_ENV
          else
            echo "ischanges=false" >> $GITHUB_ENV
          fi

          echo ischanges: ${{ env.ischanges }}
          echo changesbody: ${{ env.changesbody }}

      - name: Commit and Push
        if: env.ischanges == 'true'
        run: |
          git add .
          git commit -m "update $(date +%Y-%m-%d" "%H:%M:%S)"
          git push -f

      - name: Zip EFI Ventura
        if: env.ischanges == 'true'
        uses: vimtor/action-zip@v1
        with:
          files: EFI README.md
          recursive: false
          dest: ${{ github.event.repository.name }}-${{ env.release_tag }}.zip

      - name: Upload firmware to release
        if: env.ischanges == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          body: ${{ env.changesbody }}
          files: Hackintosh*.zip
          prerelease: true

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 3

